package stepone;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.concurrent.TimeUnit;

import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;

import com.jcraft.jsch.Channel;
import com.jcraft.jsch.ChannelSftp;
import com.jcraft.jsch.JSch;
import com.jcraft.jsch.JSchException;
import com.jcraft.jsch.Session;
import com.jcraft.jsch.SftpException;

public class steptwo extends TestBase {

	public static String FILE_PATH = "C:\\test_java\\jar-files\\sprint-status-sam.xlsx";
	static List<Map<String, String>> list = new ArrayList<Map<String, String>>();
	static Map<String, String> tmp;
	static String AUTOMATE_URL = "http://qualidici:10002/login.jsp";
	static int STATUS_ROW_NO = 11;
	static int BACKFILE_UPLOAD = 12;
	static int DETAILS_UPLOAD = 13;
	static ChannelSftp sftpChannel;
	static Session session = null;
	public  SimpleDateFormat sdf = new SimpleDateFormat("yyyy.MM.dd.HH.mm.ss");
	public static String BACKFILE_FOLDER_PATH = "C:\\test_java\\jar-files\\Backfill_files\\";

	public static void readUserDataForStepTwo(String user, Integer autostatus) throws IOException {
		String excelFilePath = FILE_PATH;
		String excelSheetName = "Sprint 3";
		if (excelFilePath != null && !"".equals(excelFilePath.trim()) && excelSheetName != null
				&& !"".equals(excelSheetName.trim())) {
			try {
				/* Open the file input stream. */
				FileInputStream fis = new FileInputStream(excelFilePath.trim());

				/* Get workbook. */
				XSSFWorkbook excelWookBook = new XSSFWorkbook(fis);

				/* Get sheet by name. */
				Sheet copySheet = excelWookBook.getSheet(excelSheetName);

				int fRowNum = copySheet.getFirstRowNum();
				int lRowNum = copySheet.getLastRowNum();
				/*
				 * First row is excel file header, so read data from row next to
				 * it.
				 */
				for (int i = fRowNum + 1; i < lRowNum + 1; i++) {
					/* Only get desired row data. */
					tmp = new HashMap<String, String>();
					int autoStatusInt = (int) (copySheet.getRow(i).getCell(11)).getNumericCellValue();

					String userTemp = (copySheet.getRow(i).getCell(2)).toString().trim().toLowerCase();
					String userTempActual = user.toString().trim().toLowerCase();
					if (userTemp.equals(userTempActual) && autoStatusInt == autostatus) {
						String rowid = Integer.toString(i);
						tmp.put("row_id", rowid);
						tmp.put("summory_table", (copySheet.getRow(i).getCell(1)).toString());
						tmp.put("backfill_files", (copySheet.getRow(i).getCell(BACKFILE_UPLOAD)).toString());
						tmp.put("detail_files", (copySheet.getRow(i).getCell(DETAILS_UPLOAD)).toString());
						list.add(tmp);
					}

				}

			} catch (Exception ex) {
				ex.printStackTrace();
			}
		}

	}

	public static void searchAndUpdate(String element, String count_file , String detail_file ) throws InterruptedException, SftpException {
		driver.findElement(By.name("searchString")).sendKeys(element);
		driver.findElement(By.name("searchString")).sendKeys(Keys.ENTER);
		Thread.sleep(3000);
		connecttoWinScp();
		Map<String, String> map = new HashMap<String, String>();
		String formatted_detail_file =  formatFileName(detail_file, "Detail_");
		int resultDetailInt = getWinScpfile(detail_file, formatted_detail_file);
		
		Thread.sleep(1000);
		String formatted_count_file =  formatFileName(count_file ,"Count_");
		int resultCoutInt = getWinScpfile(count_file, formatted_count_file );
		
		if(resultDetailInt == resultCoutInt) {
			map.put("count", formatted_count_file);
			map.put("details", formatted_detail_file);
			System.out.println("Tic : " +element + " cont: " +formatted_count_file + " detail: " + formatted_detail_file);
			System.out.println("-------------");
			driver.findElement(By.xpath("//input[@type='file']")).sendKeys(BACKFILE_FOLDER_PATH + map.get("count"));
			Thread.sleep(2000);
			driver.findElement(By.xpath("//input[@type='file']")).sendKeys(BACKFILE_FOLDER_PATH + map.get("details"));
		}
		
		sftpChannel.exit();
		session.disconnect();
		Thread.sleep(4000);
	}
	public static String formatFileName(String filename, String fomatstr) {
		if(!filename.isEmpty()){
			String filenameWithPath = filename;
			String orgfileName = filenameWithPath.substring(filenameWithPath.lastIndexOf("/") + 1);
			String filenAry[] = orgfileName.toString().split("\\.") ;
			String fileExt = filenAry[1];
			return fomatstr + filenAry[0] + "_" + new SimpleDateFormat("yyyyMMddhhmmss'."+filenAry[1]+"'").format(new Date());
		} else {
			return "";
		}
	}
	public static ChannelSftp connecttoWinScp() {
		JSch jsch = new JSch();

		try {
				session = jsch.getSession("ubuntu", "qualiditrial.bitwiseglobal.com", 22);
				session.setConfig("StrictHostKeyChecking", "no");
				session.setPassword("Bitwise@2018");
				session.connect();
				Channel channel = session.openChannel("sftp");
				channel.connect();
				sftpChannel = (ChannelSftp) channel;
		} catch (JSchException e) {
				e.printStackTrace();
		}

		return sftpChannel;
	}

	public static int getWinScpfile(String destination , String source)  {
		try{
			sftpChannel.get(destination , BACKFILE_FOLDER_PATH + source);
			return 1; 
		} catch(SftpException st){
			System.out.print("ERROR :: Server File error.");
		}
			return 0;
	}

	public static void afterSearchUpdateStatusInExcel(String column_id, String summery_table) {
		String excelFilePath = FILE_PATH;
		String excelSheetName = "Sprint 3";
		if (excelFilePath != null && !"".equals(excelFilePath.trim()) && excelSheetName != null
				&& !"".equals(excelSheetName.trim())) {
			try {

				FileInputStream fis = new FileInputStream(excelFilePath.trim());
				XSSFWorkbook excelWookBook = new XSSFWorkbook(fis);
				int updateActualColumn = Integer.parseInt(column_id);
				Sheet copySheet = excelWookBook.getSheet(excelSheetName);
				copySheet.getRow(updateActualColumn).getCell(STATUS_ROW_NO).setCellValue(1);
				FileOutputStream output_file = new FileOutputStream(new File(excelFilePath.trim())); // Open
																										// //
																										// updates
				excelWookBook.write(output_file); // write changes
				output_file.close();

			} catch (Exception ex) {
				ex.printStackTrace();
			}
		}
	}

	public static void main(String[] args) {
		try {
			enterUserfromPrompt();
			readUserDataForStepTwo(username_txt_execle, 1);

			if (list.size() > 0) {
				loginPortal();
				for (Map<String, String> map : list) {
					try {
						searchAndUpdate(map.get("summory_table"), map.get("backfill_files"), map.get("detail_files"));
					} catch (SftpException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
					afterSearchUpdateStatusInExcel(map.get("row_id"), map.get("summory_table"));
				}
			} else {
				System.out.println("ALERT: Hi, We don't have any more records to update. Please check");
			}

		} catch (IOException e) {
			e.printStackTrace();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}

	}

}
